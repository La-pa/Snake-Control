#include <iostream>
#include<cstdlib>
#include<Windows.h>
#include<control.h>
#include<conio.h>
#include<time.h>	//有各种时间函数

using namespace std;

//贪吃蛇
void Game_Snake();

const int UP = 72;
const int DOWN = 80;
const int LEFT = 75;
const int RIGHT = 77;

static int changeflag = 1;

// 一、游戏界面
void Game_Snake_Start();// 1.游戏开始界面
void Game_Snake_Over();// 2.游戏结束界面
void Game_Snake_ing();// 3.游戏进行界面


// 二、游戏说明(文字）
void GSnake_Rule();

//游戏结束
bool Game_Snake_GameOver();


void GSnake_Snake_();

//	a.蛇的身体
void GSnake_Snake_Body();
void GSnake_Snake_Move(int direction);

// 2.食物
void GSnake_Food_Creat();

// 3.地图
void GSnake_Map();

// 其他设置

// 1.设置光标
void Gotoxy(int x, int y);

//食物
struct
{
	int x;
	int y;
}food;

//蛇
struct
{
	int len;
	int x[200];//用来记录蛇身每个方块的坐标
	int y[200];
	/*int speed;*/
}snake;

//方向
extern int direction;
extern int history_direction;



extern int score;

//结束界面位置
const int game_over_x = 46;
const int game_over_y = 12;

//游戏开始界面的背景图片
void Game_Snake_Start_Background();

//全局变量
int score = 0;
int direction = RIGHT;
int history_direction = RIGHT;

int main()
{
	Game_Snake();
	return 0;
}

//●

//贪吃蛇游戏
void Game_Snake()
{
	Game_Snake_Start();
}






// 1.游戏开始界面
void Game_Snake_Start()
{
	system("mode con cols=100 lines=30");
	system("cls");
	int score = 0;
	Gotoxy(42, 15);
	cout << "1.开始游戏";
	Gotoxy(42, 17);
	cout << "2.游戏规则";
	Gotoxy(42, 19);
	cout << "3.退出游戏";

	char option = '1';
L1:
	option = getch();
	switch (option)
	{
	case '1':Game_Snake_ing(); break;
	case '2':GSnake_Rule(); break;
	case '3':break;
	default: Gotoxy(0, 29); cout << "请重新输入"; goto L1;
	}
	return;
}


// 2.游戏进行界面
void Game_Snake_ing()
{
	//界面
	system("cls");//清空界面
	GSnake_Map();

	direction = RIGHT;
	history_direction = RIGHT;

	//得分
	Gotoxy(72, 14);
	cout << "分数: ";

	//蛇
	GSnake_Snake_();

	//游戏结束
	Game_Snake_Over();

	Gotoxy(30, 30);
	//cout << '\n';
	//system("pause");
}


// 3.游戏结束界面
void Game_Snake_Over()
{
	//结束界面绘画
	system("cls");
	Gotoxy(game_over_x, game_over_y);
	cout << "游戏结束";
	Gotoxy(game_over_x, game_over_y + 2);
	cout << "您的成绩：";
	Gotoxy(game_over_x, game_over_y + 4);
	cout << "分数: " << score;

	//其他操作
	Gotoxy(game_over_x - 2, game_over_y + 9);
	cout << "1.重新游戏";
	Gotoxy(game_over_x - 2, game_over_y + 10);
	cout << "2.返回主菜单";

	char option;
L1:
	option = getch();
	switch (option)
	{
	case '1':Game_Snake_ing(); break;
	case '2':Game_Snake_Start(); break;
	default:Gotoxy(0, 29); cout << "请重新输入"; goto L1;
	}
}


void GSnake_Map()
{
	for (int i = 0; i < 60; i += 2)
	{
		Gotoxy(i, 0);
		cout << "■";
		Gotoxy(i, 29);
		cout << "■";
	}
	for (int i = 0; i < 30; i++)
	{
		Gotoxy(0, i);
		cout << "■";
		Gotoxy(58, i);
		cout << "■";
	}

	food.x = 48;
	food.y = 20;
	Gotoxy(food.x, food.y);
	cout << "●";
	Gotoxy(78, 14);
	cout << score;
}


// 1.设置光标
void Gotoxy(int x, int y)
{
	COORD position = { x,y };
	HANDLE hout = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleCursorPosition(hout, position);
}


//蛇的所有信息
void GSnake_Snake_()
{
	GSnake_Snake_Body();
	int  ch = RIGHT;

	while (Game_Snake_GameOver())
	{
		//方向
		if (kbhit())
		{
			//fflush(stdin);//刷新缓存区
			ch = getch();
			ch = getch();
			switch (ch)
			{
			case 77:	direction = 77; break;
			case 75:	direction = 75; break;
			case 72:	direction = 72; break;
			case 80:	direction = 80; break;
			}
			if (history_direction == 72 && direction == 80)	direction = 72;
			if (history_direction == 80 && direction == 72)	direction = 80;
			if (history_direction == 75 && direction == 77)	direction = 75;
			if (history_direction == 77 && direction == 75)	direction = 77;
		}
		GSnake_Snake_Move(direction);
		GSnake_Food_Creat();
		Sleep(200);
	}
}

//蛇的身体
void GSnake_Snake_Body()
{
	//打印蛇头
	snake.len = 3;
	snake.x[0] = 20;
	snake.y[0] = 20;
	Gotoxy(snake.x[0], snake.y[0]);
	cout << "■";
	//打印蛇身
	for (int i = 1; i < snake.len; i++)
	{
		snake.x[i] = snake.x[i - 1];
		snake.y[i] = snake.y[i - 1] + 1;
		Gotoxy(snake.x[i], snake.y[i]);
		cout << "■";
	}
}

void GSnake_Snake_Move(int direction)
{
	//消除尾巴
	if (changeflag == 1)
	{
		Gotoxy(snake.x[snake.len - 1], snake.y[snake.len - 1]);
		cout << "  ";
	}


	for (int i = snake.len - 1; i > 0; i--)
	{
		snake.x[i] = snake.x[i - 1];
		snake.y[i] = snake.y[i - 1];
	}

	history_direction = direction;
	//增加头
	switch (direction)
	{
	case 72:snake.y[0]--; break;
	case 75:snake.x[0] -= 2; break;
	case 77:snake.x[0] += 2; break;
	case 80:snake.y[0]++; break;
	}
	Gotoxy(snake.x[0], snake.y[0]);
	cout << "■";
	changeflag = 1;


}


void GSnake_Food_Creat()
{
	if (snake.x[0] == food.x && snake.y[0] == food.y)//只有蛇吃到食物，才能生成新食物
	{
		changeflag = 0;
		snake.len++;
		while (1)
		{
			srand((unsigned int)time(NULL));
			food.x = rand() % (60 - 6) + 2;//限定食物的x范围不超出围墙，但不能保证food.x为偶数
			food.y = rand() % (30 - 2) + 1;
			for (int i = 0; i < snake.len; i++)
			{
				if (food.x == snake.x[i] && food.y == snake.y[i])//如果产生的食物与蛇身重合则退出
					break;
			}
			if (food.x % 2 == 0)	break;//符合要求，退出循环
		}
		Gotoxy(78, 14);
		score += 50;
		cout << score;
		Gotoxy(food.x, food.y);
		cout << "●";
	}

}

bool Game_Snake_GameOver()
{
	//碰到围墙，OVER
	if (snake.x[0] == 0 || snake.x[0] == 60 - 2)	return false;
	if (snake.y[0] == 0 || snake.y[0] == 30 - 1)	return false;
	for (int i = 1; i < snake.len; i++)
	{
		if (snake.x[0] == snake.x[i] && snake.y[0] == snake.y[i])
			return false;
	}
	return true;
}


void GSnake_Rule()
{
	system("cls");
	Gotoxy(40, 12);
	cout << "正在施工中";
	Gotoxy(40, 13);
	system("pause");
	Game_Snake_Start();
}



